<!DOCTYPE html>
<html>
<head>
    <title></title>
    <link rel="stylesheet" type="text/css" href="/stylesheets/style.css">
    <script src="/primus/primus.js"></script>
    <script src="/javascripts/zepto.js"></script>
    <script src="/javascripts/ion.sound.js"></script>
    <script src="/javascripts/Bacon.min.js"></script>
    <script src="/javascripts/q.js"></script>
    <script src="/javascripts/lazy.js"></script>

<!-- optional support for DOM event and AJAX-based sequences:
    <script type="text/javascript" src="/javascripts/lazy.browser.js"></script>
        <script src="/javascripts/Bacon.JQuery.Bindings.js"></script>
         <script src="/javascripts/underscore-min.js"></script>
-->
    <script>
        var primus = new Primus;
    </script>
</head>
<body>
<br/>
<h2 style="text-align: center; color: #ff4b2b">This Page Works Offline In Most Modern Browsers<br/> Unless Javascript Has Been Disabled
</h2>
<h3 style="text-align: center; color: #ff4b2b; font-style: italic;">(Just don't try to reload without a server connection)</h3>
<br/>
<form>
        <input type="text" id ='a8' size='3'/>
        <input type="text" id ='b8' size='3'/>
        <input type="text" id ='c8' size='3'/>
        <input type="text" id ='d8' size='3'/><br/>
        Score Number:</span> <input type="text" id ='e8' size='3' value="20"/>
    <select class='b3' id='complexity'>
        <option value="simple">Simple solutions.</option>
        <option value="intermediate">Includes subtraction of negative numbers.</option>
        <option value="complex">Subtraction of negatives and operations with fractions.</option>
    </select>
    <input type='button' class='b2 'value='EVALUATE' id='crows'/>
</form>
<button class="b2" id="clean" >ERASE</button>

<div id="cows" style="background-color:black; color:springgreen; width:95%; margin-left:7%;">
<br/><span style="color:#ffc050; font-size:18px;">*****Wolves.*****</span>
</div>

<div id="pigs" style="background-color:black; color:springgreen; width:95%; margin-left:7%;">
<br/><span style="color:#ffc050; font-size:18px;">*****Demented judges.*****</span>
</div>

<div id="skunks" style="background-color:black; color:springgreen; width:95%; margin-left:7%;">
<br/><span style="color:#ffc050; font-size:18px;">*****Winds of change.*****</span>
</div>

<div id="monkeys" style="background-color:black; color:springgreen; width:95%; margin-left:7%;">
<br/><span style="color:#ffc050; font-size:18px;">*****Dissolution and oblivion.*****</span>
</div>

<div id="dogs" style="background-color:black; color:springgreen; width:95%; margin-left:7%;">
<br/><span style="color:#ffc050; font-size:18px;">*****Cats and dogs.*****</span>
</div>

<div id="badgers" style="background-color:black; color:springgreen; width:95%; margin-left:7%;">
<br/><span style="color:#ffc050; font-size:18px;">*****Oblivion would appear to be the destination.*****</span>
</div>
<br/><br/>

<script>
var works = 0;
var works1 = 0;
var works2 = 0;
var works3 = 0;
var works4 = 0;
var works5 = 0;
var works6 = 0;
var j, k, l, m, n;
$(function() {
    $('#clean')
	    .asEventStream("click")
	    .subscribe(function(event) {
	            $('#cows').html('<span style="color:#ffc050; font-size:18px;">Three-dice solutions</span>');
                $('#pigs').html('<span style="color:#ffc050; font-size:18px;">Combine the results of two distinct computations.</span>');
                $('#p').html('<span style="color:#ffc050; font-size:18px;">Foxes and hens.</span>');
                $('#monkeys').html('<span style="color:#ffc050; font-size:18px;">Center first, then left and then right.</span>');
                $('#skunks').html('<span style="color:#ffc050; font-size:18px;">Center first, then right and then left.</span>');
                $('#dogs').html('<span style="color:#ffc050; font-size:18px;">Sequentially, left to right.</span>');
                $('#badgers').html('<span style="color:#ffc050; font-size:18px;">Sequentially, right to left.</span>');

	        return false;
    });
});

var crow = $('#crows');
crow.asEventStream("click")
    .subscribe(function(event) {
            $('#cows').html('<span style="color:#ffc050; font-size:18px;">Three-dice solutions</span>');
            $('#pigs').html('<span style="color:#ffc050; font-size:18px;">Combine the results of two distinct computations.</span>');
            $('#p').html('<span style="color:#ffc050; font-size:18px;">Foxes and hens.</span>');
            $('#monkeys').html('<span style="color:#ffc050; font-size:18px;">Center first, then left and then right.</span>');
            $('#skunks').html('<span style="color:#ffc050; font-size:18px;">Center first, then right and then left.</span>');
            $('#dogs').html('<span style="color:#ffc050; font-size:18px;">Sequentially, left to right.</span>');
            $('#badgers').html('<span style="color:#ffc050; font-size:18px;">Sequentially, right to left.</span>');
            var complexity = $('#complexity').val();
	        var a = parseInt($('#a8').val(), 10);
            var b = parseInt($('#b8').val(), 10);
            var c = parseInt($('#c8').val(), 10);
            var d = parseInt($('#d8').val(), 10);
	        var scoreNum = parseInt($('#e8').val(), 10);
            go(a, b, c, d, complexity, scoreNum);
    });
var go = function () {
    for (j=1; j<7; j+=1) {
        for (k=j; k<7; k+=1) {
            for (i=k; i<12; i+=1) {
                for (m=i; m<20; m+=1) {
                    imp (j, k, i, m);
                }
            }
        }
    }
};
var imp = function(a, b, c, d, compl, scNum) {
    works = 0;
    var scoreNum = 20;
        var complexity = compl;
        var r3 = [
        [a, b, c],
        [a, b, d],
        [a, c, b],
        [a, c, d],
        [a, d, b],
        [a, d, c],
        [b, a, c],
        [b, a, d],
        [b, c, a],
        [b, c, d],
        [b, d, a],
        [b, d, c],
        [c, a, b],
        [c, a, d],
        [c, b, a],
        [c, b, d],
        [c, d, a],
        [c, d, b],
        [d, a, b],
        [d, a, c],
        [d, b, a],
        [d, b, c],
        [d, c, a],
        [d, c, b ]
    ];
//  All possible combination of four dice.
    var r4 = [
        [a, b, c, d],
        [a, b, d, c],
        [a, c, b, d],
        [a, c, d, b],
        [a, d, b, c],
        [a, d, c, b],
        [b, a, c, d],
        [b, a, d, c],
        [b, c, a, d],
        [b, c, d, a],
        [b, d, a, c],
        [b, d, c, a],
        [c, a, b, d],
        [c, a, d, b],
        [c, b, a, d],
        [c, b, d, a],
        [c, d, a, b],
        [c, d, b, a],
        [d, a, b, c],
        [d, a, c, b],
        [d, b, a, c],
        [d, b, c, a],
        [d, c, a, b],
        [d, c, b, a]
    ];

        var calc = [
        function (xt, yt) {return xt + yt;},
        function (xt,yt) {
        if ((xt - yt) >= 0 || complexity !== "simple") {
        return xt - yt;
        }
        else { return undefined; }
        },
        function (xt,yt) {return xt * yt;},
        function (xt,yt){
        if (complexity === "complex" || ~~(xt/yt) === xt/yt) {
        return xt/yt
        } else { return undefined; }
        },
        function (xt, yt) {
        if ( typeof xt === 'number' && typeof yt === 'number' && yt >= 0 && xt !== 0 && ~~yt === yt && ~~xt ===xt ) {
        var cat = (xt.toString()) + (yt.toString());
        return parseInt(cat, 10);
        } else { return undefined; }
        }
        ];

    var op = [" + ", " - ", " x ", " divided by ", " concatenated left of ",
                        " subtracted from ", " divided into ", " concatenated in front of "
    ];

    var dataObject = function (ar) {
        var o = {}, ob = {}, i;
        for (i = 0; i < 12; i += 1) {
                o[ar[i]] = ar[i];
        }
        var l = 0;
        for (var x in o) {
                ob[l] = o[x];
                l += 1;
        }
        return {'len': l, 'ob': ob};
    };

    var artistOb = dataObject(r3);
    var o = artistOb.ob;
    var l = artistOb.len;
    var cow = $('#cows');
    var i;

    for (j = 0; j < l; j++) {
        for (k = 0; k < 5; k++) {
            for (i = 0; i < 5; i++) {
                if (calc[i]( calc[k](o[j][0], o[j][1]), o[j][2] ) === scoreNum) {
                  //  cow.append( '<br/>(' + o[j][0] + " " + op[k] + " " + o[j][1] + ") " + op[i] + " " + o[j][2] + " = " + scoreNum);
                    works1 = works + 7;
                }
                if (calc[i](o[j][2],  calc[k](o[j][0], o[j][1])  ) === scoreNum) {
                  //  cow.append('<br/>' + o[j][2] + " " + op[i] + " (" + o[j][0] + " " + op[k] + " " + o[j][1] + ") = " + scoreNum);
                    works1 = works + 3;
                }
            }
        }
    }
    if (works1 === 0)  cow.append('<br/>' + a + ' ' +  b + ' ' + c + ' ' + d);

    var musicianOb = dataObject(r4);
    o = musicianOb.ob;
    var l2 = musicianOb.len;

for (j = 0; j < l2; j++) {
    for (k = 0; k < 5; k++) {
        for (i=0; i<5; i++) {
            for (m=0; m<5; m++) {
               if (calc[m](calc[k](o[j][0], o[j][1]), calc[i](o[j][2], o[j][3])) == scoreNum) {
                    works2 += 1;
                    //$('#pigs').append("<br/>(" + o[j][0] + " " + op[k] + " " + o[j][1] + ") " + op[m] + " (" + o[j][2]
                     //   + " " + op[i] + " " + o[j][3] + ") = " + scoreNum);
                }
            }
        }
    }
}
if (works2 === 0) $('#pigs').append('<br/>' + a + ' ' +  b + ' ' + c + ' ' + d);

for (j = 0; j < l2; j++) {
    for (k = 0; k < 5; k++) {
        for (i = 0; i < 5; i++) {
            for (m = 0; m < 5; m++) {

                if (calc[k](calc[i](calc[m](o[j][0], o[j][1]), o[j][2]), o[j][3]) === scoreNum) {
                    works3 += 11;
               //     $('#dogs').append("<br/>( (" + o[j][0] + " " + op[m] + " " + o[j][1] + ") " + op[i] + " " + o[j][2] + ") " + op[k] + " " + o[j][3] + " = " + scoreNum);
                }
                if (works3 === 0) $('#dogs').append('<br/>' + a + ' ' +  b + ' ' + c + ' ' + d);

                if (calc[k](o[j][3], calc[i](calc[m](o[j][0], o[j][1]), o[j][2])) === scoreNum) {
                    works4 += 11;
                 //   $('#skunks').append("<br/>" + o[j][3] + " " + op[k] + " ( (" + o[j][0] + " " + op[m] + " " + o[j][1] + ") " + op[i] + " " + o[j][2] + ") = " + scoreNum);
                if (works4 === 0) $('#skunks').append('<br/>' + a + ' ' +  b + ' ' + c + ' ' + d);
                }

                if (calc[k](calc[i](o[j][2], calc[m](o[j][0], o[j][1])), o[j][3]) === scoreNum) {
                    works5 += 11;
                 //   $('#monkeys').append("<br/>(" + o[j][2] + " " + op[i] + " (" + o[j][0] + " " + op[m] + " " + o[j][1] + ")) " + op[k] + " " + o[j][3] + " = " + scoreNum);
                if (works5 === 0) $('#monkeys').append('<br/>' + a + ' ' +  b + ' ' + c + ' ' + d);
                }

                if (calc[k](o[j][3], calc[i](o[j][2], calc[m](o[j][0], o[j][1]))) === scoreNum) {
                    works6 += 11;
                //    $('#badgers').append("<br/>" + o[j][3] + " " + op[k] + " (" + o[j][2] + " " + op[i] + " (" + o[j][0] + " " + op[m] + " " + o[j][1] + ")) = " + scoreNum);
                if (works6 === 0) $('#badgers').append('<br/>' + a + ' ' +  b + ' ' + c + ' ' + d);
                }
            }
        }
    }
}

}

</script>
</body>
</html>